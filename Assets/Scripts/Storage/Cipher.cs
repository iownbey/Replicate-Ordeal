using UnityEngine;

public class Cipher
{
	static uint next, key;
    public static uint Encrypt(uint code)
	{
		UpdateShifts();
		return (code) + next;
	}
	
	public static uint Decrypt(uint code)
	{
		UpdateShifts();
		return (code) - next;
	}
	
	public static void SetState(uint key, uint state=0xffffffff)
	{
		Cipher.key = key;
		next = state;
	}
	
	public static uint GetAndSet()
	{
		key = keys[Random.Range(0, 99)];
		SetState(key);
		return key;
	}

	private static void UpdateShifts()
	{
		if ((next & 0x00000001) != 0) next = (next >> 1) ^ key;
		else next = next >> 1;
	}

	private static uint[] keys = {
		0x80000057, 0x80000062, 0x8000007A, 0x80000092, 0x800000B9,
		0x800000BA, 0x80000106, 0x80000114, 0x8000012D, 0x8000014E,
		0x8000016C, 0x8000019F, 0x800001A6, 0x800001F3, 0x8000020F,
		0x800002CC, 0x80000349, 0x80000370, 0x80000375, 0x80000392,
		0x80000398, 0x800003BF, 0x800003D6, 0x800003DF, 0x800003E9,
		0x80000412, 0x80000414, 0x80000417, 0x80000465, 0x8000046A,
		0x80000478, 0x800004D4, 0x800004F3, 0x8000050B, 0x80000526,
		0x8000054C, 0x800005B6, 0x800005C1, 0x800005EC, 0x800005F1,
		0x8000060D, 0x8000060E, 0x80000629, 0x80000638, 0x80000662,
		0x8000066D, 0x80000676, 0x800006AE, 0x800006B0, 0x800006BC,
		0x800006D6, 0x8000073C, 0x80000748, 0x80000766, 0x8000079C,
		0x800007B7, 0x800007C3, 0x800007D4, 0x800007D8, 0x80000806,
		0x8000083F, 0x80000850, 0x8000088D, 0x800008E1, 0x80000923,
		0x80000931, 0x80000934, 0x8000093B, 0x80000958, 0x80000967,
		0x800009D5, 0x80000A25, 0x80000A26, 0x80000A54, 0x80000A92,
		0x80000AC4, 0x80000ACD, 0x80000B28, 0x80000B71, 0x80000B7B,
		0x80000B84, 0x80000BA9, 0x80000BBE, 0x80000BC6, 0x80000C34,
		0x80000C3E, 0x80000C43, 0x80000C7F, 0x80000CA2, 0x80000CEC,
		0x80000D0F, 0x80000D22, 0x80000D28, 0x80000D4E, 0x80000DD7,
		0x80000E24, 0x80000E35, 0x80000E66, 0x80000E74, 0x80000EA6
	};
}
